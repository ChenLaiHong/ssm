<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lh.dao.LinkMapper">
  <resultMap id="BaseResultMap" type="com.lh.bean.Link">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="linkName" jdbcType="VARCHAR" property="linkName" />
    <result column="linkUrl" jdbcType="VARCHAR" property="linkUrl" />
    <result column="orderNo" jdbcType="INTEGER" property="orderNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, linkName, linkUrl, orderNo
  </sql>
  <select id="selectByExample" parameterType="com.lh.bean.LinkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from link
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from link
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lh.bean.LinkExample">
    delete from link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lh.bean.Link">
    insert into link (id, linkName, linkUrl, 
      orderNo)
    values (#{id,jdbcType=INTEGER}, #{linkName,jdbcType=VARCHAR}, #{linkUrl,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=INTEGER})
  </insert>
  
  <!-- list集合 -->
  <select id="list" parameterType="Map" resultMap="BaseResultMap">
		select * from link order by orderNo
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	 <!-- 执行批量导入操作 -->
  <insert id="batchInsert" parameterType="ArrayList">
  	INSERT INTO link(
  			 id,
  			 linkName,
  			 linkUrl,
  			 orderNo) 
	<foreach collection="list" item="item" index="index" separator="union all">
	 	SELECT 
	 		#{item.id, jdbcType=INTEGER},
	 		#{item.linkName, jdbcType=VARCHAR},
	 		#{item.linkUrl, jdbcType=VARCHAR},
			#{item.orderNo, jdbcType=INTEGER}
		FROM DUAL
	</foreach>	  	 
  </insert>
  <!-- 导入数据库 -->
  <insert id="addLinkTo" parameterType="com.lh.bean.Link">
  	INSERT INTO link(id,linkName,linkUrl,orderNo) 
  	values (#{id,jdbcType=INTEGER}, #{linkName,jdbcType=VARCHAR}, #{linkUrl,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=INTEGER})
  </insert>
  <delete id="del" parameterType="String">
  	
  	delete from link where id = #{id,jdbcType=VARCHAR}
  
  </delete>
  
   <select id="getLinkList" parameterType="int" resultMap="BaseResultMap">
        <![CDATA[
          select * from link
        ]]>
</select>
	<!-- getTotal -->
	<select id="getTotal" parameterType="Map" resultType="Long">
		select count(*) from link
	</select>
  <insert id="insertSelective" parameterType="com.lh.bean.Link">
    insert into link
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="linkName != null">
        linkName,
      </if>
      <if test="linkUrl != null">
        linkUrl,
      </if>
      <if test="orderNo != null">
        orderNo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="linkName != null">
        #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkUrl != null">
        #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lh.bean.LinkExample" resultType="java.lang.Long">
    select count(*) from link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update link
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.linkName != null">
        linkName = #{record.linkName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkUrl != null">
        linkUrl = #{record.linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        orderNo = #{record.orderNo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update link
    set id = #{record.id,jdbcType=INTEGER},
      linkName = #{record.linkName,jdbcType=VARCHAR},
      linkUrl = #{record.linkUrl,jdbcType=VARCHAR},
      orderNo = #{record.orderNo,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lh.bean.Link">
    update link
    <set>
      <if test="linkName != null">
        linkName = #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkUrl != null">
        linkUrl = #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        orderNo = #{orderNo,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lh.bean.Link">
    update link
    set linkName = #{linkName,jdbcType=VARCHAR},
      linkUrl = #{linkUrl,jdbcType=VARCHAR},
      orderNo = #{orderNo,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>